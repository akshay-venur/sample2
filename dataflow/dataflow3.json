{
	"name": "dataflow3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "adventure_connection_person",
						"type": "DatasetReference"
					},
					"name": "AdventurWorksCustomerData"
				},
				{
					"dataset": {
						"referenceName": "Persontable_wide_world",
						"type": "DatasetReference"
					},
					"name": "WideWorldPeopleData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1",
					"description": " 'PersonID, FullName, PhoneNumber, EmailAddress'"
				},
				{
					"name": "select2"
				},
				{
					"name": "fullname"
				},
				{
					"name": "select3"
				},
				{
					"name": "union1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          BusinessEntityID as integer,",
				"          PersonType as string,",
				"          NameStyle as boolean,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          EmailPromotion as integer,",
				"          AdditionalContactInfo as string,",
				"          Demographics as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> AdventurWorksCustomerData",
				"source(output(",
				"          PersonID as integer,",
				"          FullName as string,",
				"          PreferredName as string,",
				"          SearchName as string,",
				"          IsPermittedToLogon as boolean,",
				"          LogonName as string,",
				"          IsExternalLogonProvider as boolean,",
				"          HashedPassword as binary,",
				"          IsSystemUser as boolean,",
				"          IsEmployee as boolean,",
				"          IsSalesperson as boolean,",
				"          UserPreferences as string,",
				"          PhoneNumber as string,",
				"          FaxNumber as string,",
				"          EmailAddress as string,",
				"          Photo as binary,",
				"          CustomFields as string,",
				"          OtherLanguages as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> WideWorldPeopleData",
				"WideWorldPeopleData select(mapColumn(",
				"          PersonID,",
				"          FullName,",
				"          PhoneNumber,",
				"          EmailAddress",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"AdventurWorksCustomerData select(mapColumn(",
				"          BusinessEntityID,",
				"          FirstName,",
				"          MiddleName,",
				"          LastName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 derive(FullName = concat(FirstName,\" \",MiddleName, \" \",LastName)) ~> fullname",
				"fullname select(mapColumn(",
				"          BusinessEntityID,",
				"          FullName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3, select1 union(byName: true)~> union1",
				"union1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}